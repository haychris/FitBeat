package neamah.chris.fitbeat;

import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import android.app.Activity;
import android.app.ActionBar;
import android.app.Fragment;
import android.app.ListActivity;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnCompletionListener;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.os.Build;



//public class MainActivity extends Activity {
//
//    @Override
//    protected void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.activity_main);
//        if (savedInstanceState == null) {
//            getFragmentManager().beginTransaction()
//                    .add(R.id.container, new PlaceholderFragment())
//                    .commit();
//        }
//    }
//
//
//    @Override
//    public boolean onCreateOptionsMenu(Menu menu) {
//        // Inflate the menu; this adds items to the action bar if it is present.
//        getMenuInflater().inflate(R.menu.main, menu);
//        return true;
//    }
//
//    @Override
//    public boolean onOptionsItemSelected(MenuItem item) {
//        // Handle action bar item clicks here. The action bar will
//        // automatically handle clicks on the Home/Up button, so long
//        // as you specify a parent activity in AndroidManifest.xml.
//        int id = item.getItemId();
//        if (id == R.id.action_settings) {
//            return true;
//        }
//        return super.onOptionsItemSelected(item);
//    }
//
//    /**
//     * A placeholder fragment containing a simple view.
//     */
//    public static class PlaceholderFragment extends Fragment {
//
//        public PlaceholderFragment() {
//        }
//
//        @Override
//        public View onCreateView(LayoutInflater inflater, ViewGroup container,
//                Bundle savedInstanceState) {
//            View rootView = inflater.inflate(R.layout.fragment_main, container, false);
//            return rootView;
//        }
//    }
    
    public class MainActivity  extends ListActivity {
    	/** Called when the activity is first created. */

    	private static final String MEDIA_PATH = "/sdcard/";
    	List<String> songs = new ArrayList<String>();

    	private MediaPlayer mp = new MediaPlayer();
    	private int currentPosition = 0;
    	@Override
    	public void onCreate(Bundle savedInstanceState) {
    	    super.onCreate(savedInstanceState);
    	    setContentView(R.layout.activity_main);

    	    updateSongList();
    	}
    	public void updateSongList() 
    	{
    	      System.out.println("home.list().length ");
    	      File home = new File(Environment.getExternalStorageDirectory().getAbsolutePath()+"/Music");
    	      System.out.println("home.list().length " + home.list().length);
    	      songs.addAll(Arrays.asList(home.list()));
    	        setListAdapter((ListAdapter) new ArrayAdapter<String>(this, R.layout.test_item, songs));


    	}


    	protected void onListItemClick(ListView l, View v, int position, long id)
    	{
    	    currentPosition = position;
    	    playSong(MEDIA_PATH + songs.get(position));
    	}
    	private void playSong(String songPath) {
    	    try {

    	            mp.reset();
    	            mp.setDataSource(songPath);
    	            mp.prepare();
    	            mp.start();

    	            // Setup listener so next song starts automatically
    	            mp.setOnCompletionListener(new OnCompletionListener() {

    	                    public void onCompletion(MediaPlayer arg0) {
    	                            nextSong();
    	                    }

    	            });

    	    } catch (IOException e) {
    	            Log.v(getString(R.string.app_name), e.getMessage());
    	    }
    	}
    	private void nextSong() {
    	    if (++currentPosition >= songs.size()) {
    	        // Last song, just reset currentPosition
    	        currentPosition = 0;
    	} else {
    	        // Play next song
    	        playSong(MEDIA_PATH + songs.get(currentPosition));
    	 }
    	}

    
    public class Mp3Filter implements FilenameFilter {

	    @Override
	    public boolean accept(File dir, String filename) {
	        // TODO Auto-generated method stub
	        return true;
	    }
    }
}

